{"version":3,"sources":["service/dbService.js","components/rows.js","components/addcontact.js","components/filterSearch.js","App.js","index.js"],"names":["baseUrl","dbService","axios","get","newObj","post","id","console","log","delete","concat","setNumber","setName","put","name","number","Rows","_ref","value","sPer","react_default","a","createElement","map","p","key","onClick","window","confirm","AddContact","nameState","numberState","sPerson","sName","sNumber","hcName","hcNumber","find","onSubmit","event","preventDefault","newContact","Math","random","toLowerCase","then","response","data","onChange","type","filterSearch","showAll","persons","findName","filter","includes","App","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","newName","setNewName","_useState5","_useState6","newNumber","setNewNumber","_useState7","_useState8","setFindName","_useState9","_useState10","_useState11","_useState12","useEffect","filterShow","filterS","target","addcontact","components_rows","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.bf9cb24a.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\n\r\n\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => axios.get(baseUrl)\r\n\r\nconst create = (newObj) => {\r\n    return axios.post(baseUrl, newObj)\r\n}\r\n\r\nconst update = (id, setNumber, setName) => {\r\n    axios.put(`${baseUrl}/${id}`, {\r\n        name: setName,\r\n        number: setNumber\r\n    })\r\n}\r\n\r\nconst deleteContact = (id) => {\r\n    console.log(id)\r\n    axios.delete(`${baseUrl}/${id}`)\r\n    }\r\n\r\nexport default {getAll, create, deleteContact, update}","import React from 'react'\r\nimport dbService from '../service/dbService'\r\n\r\n\r\nconst Rows = ({value, sPer}) => {\r\n\r\n    const rows = () => value.map((p) => <li key={p.id}>name: {p.name} number: {p.number} <button onClick={\r\n        () => {\r\n            if(window.confirm(`Delete ${p.name}?`))\r\n            {\r\n                dbService.deleteContact(p.id)\r\n            }\r\n        }\r\n    }>delete</button></li>)\r\n\r\n    return (\r\n        <div>\r\n            <h2>Numbers</h2>\r\n        {rows()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rows","import React from 'react'\r\nimport dbService from '../service/dbService'\r\n\r\nconst AddContact =({value, nameState, numberState,sPerson, sName, sNumber, hcName, hcNumber}) => {\r\n    let find = 0;\r\n\r\n    const haveContact = () => {\r\n        value.map((p) => {\r\n            if (p.name.toLowerCase() === nameState.toLowerCase()) {\r\n                find = p.id\r\n            }\r\n        })\r\n    }\r\n\r\n    const addPhone = (event) => {\r\n        event.preventDefault()\r\n        const newContact = {\r\n            id: Math.random(),\r\n            name: nameState,\r\n            number: numberState\r\n        }\r\n        haveContact()\r\n        if (find > 0){\r\n            if(window.confirm(`${nameState} is already added to phonebook, replace the old number with new one?`)) {\r\n                console.log(find)\r\n                dbService.update(find, numberState, nameState)\r\n            }\r\n\r\n        } else {\r\n            dbService.create(newContact).then(response => {\r\n                sPerson(value.concat(response.data))\r\n            })\r\n           sName('')\r\n           sNumber('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>add a new</h2>\r\n        <form onSubmit={addPhone}>\r\n            <div>\r\n                name: <input  value={nameState} onChange={hcName}/>\r\n            </div>\r\n            <div>\r\n                number: <input value={numberState} onChange={hcNumber}/>\r\n            </div>\r\n            <div>\r\n                <button type='submit'>add</button>\r\n            </div>\r\n        </form>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport  default  AddContact","\r\n\r\nconst FilterSearch = (showAll, persons, findName) => {\r\n\r\n    return (\r\n        showAll ? persons : persons.filter(p => p.name.toLowerCase().includes(findName.toLowerCase()))\r\n    )\r\n\r\n}\r\n\r\nexport default {FilterSearch}","import React, {useState, useEffect} from \"react\";\r\nimport Rows from './components/rows'\r\nimport AddContact from \"./components/addcontact\";\r\nimport dbService from './service/dbService'\r\nimport filterS from './components/filterSearch'\r\nimport Notification from \"./components/err\";\r\n\r\n\r\n\r\n\r\n\r\nconst App =() => {\r\n    const [persons, setPersons] = useState([])\r\n    const [newName, setNewName] = useState('')\r\n    const [newNumber, setNewNumber] = useState('')\r\n    const [findName, setFindName] = useState('')\r\n    const [showAll, setShowAll] = useState(false)\r\n    const [errorMessage, setErrorMessage] = useState('some error happened...')\r\n\r\n\r\n    const handleChangeName = (event) => {\r\n        setNewName(event.target.value)\r\n    }\r\n    const handleChangeNumber = (event) => {\r\n        setNewNumber(event.target.value)\r\n    }\r\n    const handleFind = (event) => {\r\n        setFindName(event.target.value)\r\n    }\r\n\r\n    useEffect(() => {dbService.getAll().then(response => setPersons(response.data))}, [])\r\n\r\n    const filterShow = filterS.FilterSearch(showAll, persons, findName)\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Phonebook</h1>\r\n            filter shown with <input value={findName} onChange={handleFind} />\r\n            <AddContact value={persons} nameState={newName}\r\n                        numberState={newNumber} sPerson={setPersons} sName={setNewName}\r\n                        sNumber={setNewNumber} hcName={handleChangeName} hcNumber={handleChangeNumber}/>\r\n            <div>\r\n                <Rows value={filterShow} sPer={setPersons}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\n\r\n\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'))"],"sourceRoot":""}